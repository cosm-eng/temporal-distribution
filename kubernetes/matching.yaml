---
# Source: temporal/templates/server-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: temporal-matching-headless
  namespace: temporal-system
  labels:
    app.kubernetes.io/name: temporal
    helm.sh/chart: temporal-0.18.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: temporal
    app.kubernetes.io/version: 1.18.0
    app.kubernetes.io/component: matching
    app.kubernetes.io/part-of: temporal
    app.kubernetes.io/headless: 'true'
    prometheus.io/job: temporal-matching
    prometheus.io/scrape: 'true'
    prometheus.io/scheme: http
    prometheus.io/port: "9090"

  annotations:
    # Use this annotation in addition to the actual field below because the
    # annotation will stop being respected soon but the field is broken in
    # some versions of Kubernetes:
    # https://github.com/kubernetes/kubernetes/issues/58662
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - port: 7235
      targetPort: rpc
      protocol: TCP
      name: grpc-rpc
    - port: 9090
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: temporal
    app.kubernetes.io/instance: temporal
    app.kubernetes.io/component: matching
---
# Source: temporal/templates/server-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: temporal-matching
  namespace: temporal-system
  labels:
    app.kubernetes.io/name: temporal
    helm.sh/chart: temporal-0.18.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: temporal
    app.kubernetes.io/version: 1.18.0
    app.kubernetes.io/component: matching
    app.kubernetes.io/part-of: temporal
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: temporal
      app.kubernetes.io/instance: temporal
      app.kubernetes.io/component: matching
  template:
    metadata:
      labels:
        app.kubernetes.io/name: temporal
        helm.sh/chart: temporal-0.18.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: temporal
        app.kubernetes.io/version: 1.18.0
        app.kubernetes.io/component: matching
        app.kubernetes.io/part-of: temporal
      annotations:
        checksum/config: 1245f36f131d2dab87353389a85223c5afb0612fc6f93c9e5eac87f175b21dbe
        prometheus.io/job: temporal-matching
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9090'
    spec:
      securityContext:
        fsGroup: 1000 #temporal group
        runAsUser: 1000 #temporal user
      initContainers:
        - name: check-sql-service
          image: busybox
          command: [ 'sh', '-c', 'until nc -z $SQL_HOST $DB_PORT; do echo waiting for postgres service; sleep 1; done;' ]
          env:
            - name: SQL_HOST
              value: temporal-postgres
            - name: DB_PORT
              value: "5432"
      containers:
        - name: temporal-matching
          image: "ghcr.io/cosm-eng/temporal-distribution:1.18.0-0"
          imagePullPolicy: IfNotPresent
          env:
            - name: TEMPORAL_SERVICES
              value: "matching"
            - name: TEMPORAL_GLOBAL_MEMBERSHIP_BROADCASTADDRESS
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: TEMPORAL_SQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: temporal-default-store
            - name: TEMPORAL_SQL_HOST
              value: "temporal-postgres"
            - name: TEMPORAL_VISIBILITY_SQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: temporal-visibility-store
            - name: TEMPORAL_VISIBILITY_SQL_HOST
              value: "temporal-postgres"
          ports:
            - name: rpc
              containerPort: 7235
              protocol: TCP
            - name: metrics
              containerPort: 9090
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 150
            tcpSocket:
              port: rpc
          resources:
            requests:
              cpu: "0.1"
              memory: "256M"
            limits:
              cpu: "0.5"
              memory: "1024M"